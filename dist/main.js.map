{"version":3,"file":"main.js","mappings":"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","sources":["webpack://operation-helix/./src/index.js"],"sourcesContent":["import players from \"./data/players.json\";\n\n// creating a list of players dynamically from array\nlet playerSelectionContainer = document.getElementById(\n  \"player-selection-container\"\n);\n\nfunction createPlayersList() {\n  players.forEach((player) => {\n    let playerContainer = document.createElement(\"div\");\n    playerContainer.classList.add(\"player-container\");\n    playerSelectionContainer.appendChild(playerContainer);\n\n    let players = document.createElement(\"div\");\n    players.classList.add(\"players\");\n    players.setAttribute(\"id\", player.nickname.replace(/ /g, \"\"));\n    playerContainer.appendChild(players);\n\n    let playerName = document.createElement(\"div\");\n    playerName.classList.add(\"player-name\");\n    players.appendChild(playerName);\n    playerName.textContent += player.nickname;\n  });\n}\n\ncreatePlayersList();\n\n//function to return an array of object players\nlet playersArr = [];\n\nfunction getPlayersFomArr() {\n  players.forEach((player) => playersArr.push(player));\n}\n\ngetPlayersFomArr();\n\n//creating bar chart\nconst statToKey = {\n  Rating: \"rating\",\n  \"Kill Death Ratio\": \"kdr\",\n  \"Headshot Percentage\": \"headshots\",\n  Kills: \"kills\",\n  Deaths: \"deaths\",\n  \"Maps Played\": \"mapsPlayed\",\n};\n\nconst statInfo = {\n  rating: \"-Top 10 players-\",\n  kdr: \"-Top 10 players-\",\n  headshots: \"-Top 10 players-\",\n  kills: \"-Top 10 players-\",\n  deaths: \"-Top 10 players-\",\n  mapsPlayed: \"-Top 10 players-\",\n};\n\n// Player stat sorting from best to worst in top 10\nlet selectedStat = \"rating\";\nlet sortedPlayersArr = playersArr.sort(\n  (a, b) => b[selectedStat] - a[selectedStat]\n);\n\n//begin building bar chart\nlet sortedPlayersStats = sortedPlayersArr.map(\n  (playerObj) => playerObj[selectedStat]\n);\nlet sortedNamesArr = sortedPlayersArr.map((playerObj) => playerObj.nickname);\nlet axisUnit = statInfo[selectedStat];\nlet updatedLabel = Object.keys(statToKey).find(\n  (key) => statToKey[key] === selectedStat\n);\n\nconst ctx = document.getElementById(\"statsChart\").getContext(\"2d\");\n\n//declare variable to initiate new bar Chart instance\nlet statsChart = new Chart(ctx, {\n  type: \"bar\",\n  data: {\n    labels: sortedNamesArr.slice(0, 10),\n    datasets: [\n      {\n        label: selectedStat,\n        data: sortedPlayersStats,\n        HoverBackgroundColor: \"#b01700\",\n        backgroundColor: [\"rgba(255, 159, 64, 1)\"],\n        borderColor: [\"rgba(0, 0, 0, 0.1)\"],\n        borderWidth: 1,\n      },\n    ],\n  },\n  options: {\n    maintainAspectRatio: false,\n    responsive: true,\n    indexAxis: \"y\",\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: axisUnit,\n          color: \"#FF9F40\",\n          font: {\n            family: \"'Roboto', sans-serif\",\n            weight: 500,\n            size: 14,\n          },\n        },\n        position: \"top\",\n        ticks: {\n          font: {\n            size: 14,\n          },\n          color: \"#FF9F40\",\n          callback: function (value, index, ticks) {\n            return new Intl.NumberFormat().format(value);\n          },\n        },\n      },\n      y: {\n        ticks: {\n          color: \"#FF9F40\",\n          font: {\n            family: \"'Roboto', sans-serif\",\n            weight: 400,\n            size: 16,\n          },\n        },\n      },\n    },\n    plugins: {\n      title: {\n        display: true,\n        fullSize: false,\n        text: updatedLabel,\n        color: \"#FF9F40\",\n        font: {\n          family: \"'Roboto', sans-serif\",\n          weight: 500,\n          size: 24,\n        },\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            return new Intl.NumberFormat().format(context.parsed.x);\n          },\n        },\n      },\n      legend: {\n        display: false,\n      },\n    },\n  },\n});\n\n// right stats picker\nlet statsPicker = document.getElementById(\"statistics\");\n\n//create eventListener for option to choose a stat to see\nstatsPicker.addEventListener(\"click\", (e) => {\n  if (e.target == e.currentTarget) return;\n  selectedStat = e.target.className;\n  // document.querySelector(`.${selectedStat}`).classList.remove(\"selected\");\n  // document.querySelector(`.${selectedStat}`).classList.add(\"selected\");\n\n  sortedPlayersArr = playersArr.sort(\n    (a, b) => b[selectedStat] - a[selectedStat]\n  );\n\n  sortedPlayersStats = sortedPlayersArr.map(\n    (playerObj) => playerObj[selectedStat]\n  );\n  sortedNamesArr = sortedPlayersArr.map((playerObj) => playerObj.nickname);\n\n  updatedLabel = Object.keys(statToKey).find(\n    (key) => statToKey[key] === selectedStat\n  );\n\n  axisUnit = statInfo[selectedStat];\n\n  statsChart.data.labels = sortedNamesArr.slice(0, 10);\n  statsChart.data.datasets = [\n    {\n      label: updatedLabel,\n      data: sortedPlayersStats,\n      backgroundColor: [\"rgba(255, 159, 64, 1)\"],\n      borderColor: [\"rgba(0, 0, 0, 0.1)\"],\n      borderWidth: 1,\n    },\n  ];\n  statsChart.options.scales.x.title.text = axisUnit;\n  statsChart.options.plugins.title.text = updatedLabel;\n\n  if (selectedStat === \"rating\") {\n    statsChart.options.scales.x.ticks.callback = function (\n      value,\n      index,\n      ticks\n    ) {\n      return new Intl.NumberFormat().format(value);\n    };\n    statsChart.options.plugins.tooltip.callbacks.label = function (context) {\n      return Intl.NumberFormat().format(context.parsed.x);\n    };\n  } else {\n    statsChart.options.scales.x.ticks = {\n      color: \"#FF9F40\",\n      font: {\n        size: 14,\n      },\n    };\n    statsChart.options.plugins.tooltip.callbacks = {};\n  }\n\n  statsChart.update();\n});\n\n//begin creating player info section\nfunction createCardForPlayer() {\n  players.forEach((player) => {\n    document\n      .getElementById(player.nickname.replace(/ /g, \"\"))\n      .addEventListener(\"click\", (e) => {\n        e.preventDefault();\n        createPlayerCard(player);\n      });\n  });\n}\n\nfunction createPlayerCard(player) {\n  const playerInfo = document.getElementById(\"playerInfo\");\n  playerInfo.innerHTML = \"\";\n\n  const playerInfoInner1 = document.createElement(\"div\");\n  const playerInfoInner2 = document.createElement(\"div\");\n  playerInfo.appendChild(playerInfoInner1);\n  playerInfoInner1.classList.add(\"player-info-inner-1\");\n  playerInfo.appendChild(playerInfoInner2);\n  playerInfoInner2.classList.add(\"player-info-inner-2\");\n\n  renderPlayerPicture(player, playerInfoInner1);\n  renderPlayerInGameName(player, playerInfoInner2);\n\n  const playerDataInfo = document.createElement(\"div\");\n  playerDataInfo.classList.add(\"player-data-info\");\n  playerInfoInner2.appendChild(playerDataInfo);\n\n  renderPlayerFullName(player, playerDataInfo);\n  renderPlayerRegion(player, playerDataInfo);\n  renderPlayerTeamAffiliation(player, playerDataInfo);\n  renderPlayerAge(player, playerDataInfo);\n}\n\nfunction renderPlayerPicture(player, playerInfoInner1) {\n  const playerPicture = document.createElement(\"img\");\n  playerPicture.classList.add(\"player-picture\");\n  playerPicture.title = player.nickname;\n  playerPicture.src = `${player.image}`;\n  playerPicture.srcset = `${player.image}`;\n  playerPicture.alt = player.nickname;\n  playerInfoInner1.appendChild(playerPicture);\n}\n\nfunction renderPlayerInGameName(player, playerInfoInner2) {\n  const playerTitle = document.createElement(\"h2\");\n  playerTitle.classList.add(\"player-title\");\n  playerTitle.textContent = player.nickname;\n  playerInfoInner2.appendChild(playerTitle);\n}\n\nfunction renderPlayerFullName(player, playerDataInfo) {\n  const playerFullName = document.createElement(\"div\");\n  playerFullName.classList.add(\"playerFullName\");\n  playerDataInfo.appendChild(playerFullName);\n  const playerFullNameTitle = document.createElement(\"h4\");\n  playerFullNameTitle.textContent = \"Full Name:\";\n  playerFullName.appendChild(playerFullNameTitle);\n  const playerFullNameInfo = document.createElement(\"div\");\n  playerFullNameInfo.textContent = player.fullname;\n  playerFullName.appendChild(playerFullNameInfo);\n}\n\nfunction renderPlayerRegion(player, playerDataInfo) {\n  const playerRegion = document.createElement(\"div\");\n  playerRegion.classList.add(\"playerRegion\");\n  playerDataInfo.appendChild(playerRegion);\n  const playerRedionTitle = document.createElement(\"h4\");\n  playerRedionTitle.textContent = \"Region: \";\n  playerRegion.appendChild(playerRedionTitle);\n  const playerRegionFlag = document.createElement(\"img\");\n  playerRegionFlag.classList.add(\"player-region-flag\");\n  playerRegionFlag.title = player.country.name;\n  playerRegionFlag.src = `${player.country.flag}`;\n  playerRegionFlag.srcset = `${player.country.flag}`;\n  playerRegionFlag.alt = player.country.name;\n  playerRegion.appendChild(playerRegionFlag);\n}\n\nfunction renderPlayerTeamAffiliation(player, playerDataInfo) {\n  const playerTeam = document.createElement(\"div\");\n  playerTeam.classList.add(\"playerTeam\");\n  playerDataInfo.appendChild(playerTeam);\n  const playerTeamTitle = document.createElement(\"h4\");\n  playerTeamTitle.textContent = \"Team:\";\n  playerTeam.appendChild(playerTeamTitle);\n  const playerTeamInfo = document.createElement(\"div\");\n  playerTeamInfo.textContent = player.team;\n  playerTeam.appendChild(playerTeamInfo);\n\n  let teamLogo = document.createElement(\"img\");\n  teamLogo.title = player.team;\n  teamLogo.src = `${player.teamLogo}`;\n  teamLogo.alt = player.team;\n  playerTeam.appendChild(teamLogo);\n}\n\nfunction renderPlayerAge(player, playerDataInfo) {\n  const playerAge = document.createElement(\"div\");\n  playerAge.classList.add(\"playerAge\");\n  playerDataInfo.appendChild(playerAge);\n  const playerAgeNumber = document.createElement(\"h4\");\n  playerAgeNumber.textContent = \"Age:\";\n  playerAge.appendChild(playerAgeNumber);\n  const playerAgeInfo = document.createElement(\"div\");\n  playerAgeInfo.textContent = player.age;\n  playerAge.appendChild(playerAgeInfo);\n}\n\n// function renderPlayerRating(player, playerDataInfo) {\n//   const playerRating = document.createElement(\"div\");\n//   playerRating.classList.add(\"playerRating\");\n//   playerDataInfo.appendChild(playerRating);\n//   const playerRatingScore = document.createElement(\"h4\");\n//   playerRatingScore.textContent = \"Rating:\";\n//   playerRating.appendChild(playerRatingScore);\n//   const playerRatingInfo = document.createElement(\"div\");\n//   playerRatingInfo.textContent = player.rating;\n//   playerRating.appendChild(playerRatingInfo);\n// }\n\ncreateCardForPlayer();\n\n//modal script\nconst open = document.getElementById(\"open\");\nconst modal_container = document.getElementById(\"modal_container\");\nconst close = document.getElementById(\"close\");\n\nopen.addEventListener(\"click\", () => {\n  modal_container.classList.add(\"show\");\n});\n\nclose.addEventListener(\"click\", () => {\n  modal_container.classList.remove(\"show\");\n});\n\n//search bar function\n"],"names":["playerSelectionContainer","document","getElementById","players","player","playerContainer","createElement","classList","add","appendChild","setAttribute","nickname","replace","playerName","textContent","playersArr","push","statToKey","Rating","Kills","Deaths","statInfo","rating","kdr","headshots","kills","deaths","mapsPlayed","selectedStat","sortedPlayersArr","sort","a","b","sortedPlayersStats","map","playerObj","sortedNamesArr","axisUnit","updatedLabel","Object","keys","find","key","ctx","getContext","statsChart","Chart","type","data","labels","slice","datasets","label","HoverBackgroundColor","backgroundColor","borderColor","borderWidth","options","maintainAspectRatio","responsive","indexAxis","scales","x","title","display","text","color","font","family","weight","size","position","ticks","callback","value","index","Intl","NumberFormat","format","y","plugins","fullSize","tooltip","callbacks","context","parsed","legend","addEventListener","e","target","currentTarget","className","update","preventDefault","playerInfo","innerHTML","playerInfoInner1","playerInfoInner2","playerPicture","src","image","srcset","alt","renderPlayerPicture","playerTitle","renderPlayerInGameName","playerDataInfo","playerFullName","playerFullNameTitle","playerFullNameInfo","fullname","renderPlayerFullName","playerRegion","playerRedionTitle","playerRegionFlag","country","name","flag","renderPlayerRegion","playerTeam","playerTeamTitle","playerTeamInfo","team","teamLogo","renderPlayerTeamAffiliation","playerAge","playerAgeNumber","playerAgeInfo","age","renderPlayerAge","createPlayerCard","open","modal_container","close","remove"],"sourceRoot":""}